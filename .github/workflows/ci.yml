name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - uses: pnpm/action-setup@v2
        with:
          version: 8
          
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
          
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Run ESLint
        run: pnpm lint
        
      - name: Run type checking
        run: pnpm typecheck

  test-frontend:
    name: Test Frontend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - uses: pnpm/action-setup@v2
        with:
          version: 8
          
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
          
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Run unit tests
        run: pnpm test:unit
        
      - name: Upload coverage
        uses: actions/upload-artifact@v3
        with:
          name: coverage-frontend
          path: |
            apps/web/coverage
            packages/ui/coverage

  test-backend:
    name: Test Backend
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: premstats
          POSTGRES_PASSWORD: premstats
          POSTGRES_DB: premstats_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
          
      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
          
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-go@v5
        with:
          go-version: '1.21'
          
      - name: Run API tests
        working-directory: packages/api
        env:
          DATABASE_URL: postgres://premstats:premstats@localhost:5432/premstats_test?sslmode=disable
          REDIS_URL: redis://localhost:6379
        run: |
          go mod download
          go test -v -race -coverprofile=coverage.txt ./...
          
      - name: Run scraper tests
        working-directory: packages/scraper
        run: |
          go mod download
          go test -v -race -coverprofile=coverage.txt ./...

  test-e2e:
    name: E2E Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - uses: pnpm/action-setup@v2
        with:
          version: 8
          
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
          
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Install Playwright browsers
        run: pnpm --filter @premstats/web exec playwright install --with-deps
        
      - name: Build application
        run: pnpm build
        
      - name: Run E2E tests
        run: pnpm test:e2e
        
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: playwright-report
          path: apps/web/playwright-report

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [lint, test-frontend, test-backend]
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Build frontend image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/Dockerfile.frontend
          tags: premstats/frontend:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          
      - name: Build backend image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/Dockerfile.backend
          tags: premstats/api:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          
      - name: Build scraper image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/Dockerfile.scraper
          tags: premstats/scraper:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max